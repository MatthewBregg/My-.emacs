;; Object CompilerIdC/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "CompilerIdC/"
  :tables
  (list
    (semanticdb-table "CMakeCCompilerId.c"
      :major-mode 'c-mode
      :tags 
        '( ("COMPILER_ID" variable (:constant-flag t) nil [4805 4816])
            ("COMPILER_VERSION_MAJOR" variable (:constant-flag t) nil [4832 4854])
            ("COMPILER_VERSION_MINOR" variable (:constant-flag t) nil [4878 4900])
            ("COMPILER_VERSION_PATCH" variable (:constant-flag t) nil [4965 4987])
            ("COMPILER_ID" variable (:constant-flag t) nil [7449 7460])
            ("info_compiler" variable
               (:pointer 1
                :default-value "\"INFO\" \":\" \"compiler[\" COMPILER_ID \"]\""
                :type "char")
                nil [7739 7806])
            ("PLATFORM_ID" variable (:constant-flag t) nil [8081 8092])
            ("PLATFORM_ID" variable (:constant-flag t) nil [10020 10031])
            ("ARCHITECTURE_ID" variable (:constant-flag t) nil [10779 10794])
            ("DEC" variable (:constant-flag t) nil [10864 10867])
            ("HEX" variable (:constant-flag t) nil [11213 11216])
            ("info_version" variable
               (:dereference 1
                :default-value "{
  'I', 'N', 'F', 'O', ':',
  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
  COMPILER_VERSION_MAJOR,
# ifdef COMPILER_VERSION_MINOR
  '.', COMPILER_VERSION_MINOR,
#  ifdef COMPILER_VERSION_PATCH
   '.', COMPILER_VERSION_PATCH,
#   ifdef COMPILER_VERSION_TWEAK
    '.', COMPILER_VERSION_TWEAK,
#   endif
#  endif
# endif
  ']','\\0'}"
                :type "char")
                nil [11567 11952])
            ("info_platform" variable
               (:pointer 1
                :default-value "\"INFO\" \":\" \"platform[\" PLATFORM_ID \"]\""
                :type "char")
                nil [12733 12800])
            ("info_arch" variable
               (:pointer 1
                :default-value "\"INFO\" \":\" \"arch[\" ARCHITECTURE_ID \"]\""
                :type "char")
                nil [12801 12864])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [12999 13008])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [13009 13022]))                  
                :type "int")
                nil [12990 13384]))          
      :file "CMakeCCompilerId.c"
      :pointmax 13392
      :fsize 13391
      :lastmodtime '(21511 9814 43228 29000)
      :unmatched-syntax '((string 28 . 69) (symbol 22 . 27) (punctuation 20 . 21))
      :lexical-table 
        '(("COMPILER_VERSION_MINOR" . ((symbol "DEC" 4901 . 4904) (semantic-list "(__GNUC_MINOR__)" 4904 . 4920)))
          ("DEC" (spp-arg-list ("n") 10867 . 10870) . 
              ((semantic-list "('0' + (((n) / 10000000)%10))" 10893 . 10922) (punctuation "," 10922 . 10923) (semantic-list "('0' + (((n) / 1000000)%10))" 10928 . 10956) (punctuation "," 10956 . 10957) (semantic-list "('0' + (((n) / 100000)%10))" 10963 . 10990) (punctuation "," 10990 . 10991) (semantic-list "('0' + (((n) / 10000)%10))" 10998 . 11024) (punctuation "," 11024 . 11025) (semantic-list "('0' + (((n) / 1000)%10))" 11033 . 11058) (punctuation "," 11058 . 11059) (semantic-list "('0' + (((n) / 100)%10))" 11068 . 11092) (punctuation "," 11092 . 11093) (semantic-list "('0' + (((n) / 10)%10))" 11103 . 11126) (punctuation "," 11126 . 11127) (semantic-list "('0' +  ((n) % 10))" 11138 . 11157)))
          ("PLATFORM_ID" . ((string "\"\"" 10032 . 10034)))
          ("HEX" (spp-arg-list ("n") 11216 . 11219) . 
              ((semantic-list "('0' + ((n)>>28 & 0xF))" 11236 . 11259) (punctuation "," 11259 . 11260) (semantic-list "('0' + ((n)>>24 & 0xF))" 11265 . 11288) (punctuation "," 11288 . 11289) (semantic-list "('0' + ((n)>>20 & 0xF))" 11294 . 11317) (punctuation "," 11317 . 11318) (semantic-list "('0' + ((n)>>16 & 0xF))" 11323 . 11346) (punctuation "," 11346 . 11347) (semantic-list "('0' + ((n)>>12 & 0xF))" 11352 . 11375) (punctuation "," 11375 . 11376) (semantic-list "('0' + ((n)>>8  & 0xF))" 11381 . 11404) (punctuation "," 11404 . 11405) (semantic-list "('0' + ((n)>>4  & 0xF))" 11410 . 11433) (punctuation "," 11433 . 11434) (semantic-list "('0' + ((n)     & 0xF))" 11439 . 11462)))
          ("COMPILER_ID" . ((string "\"\"" 7461 . 7463)))
          ("COMPILER_VERSION_MAJOR" . ((symbol "DEC" 4855 . 4858) (semantic-list "(__GNUC__)" 4858 . 4868)))
          ("COMPILER_VERSION_PATCH" . ((symbol "DEC" 4988 . 4991) (semantic-list "(__GNUC_PATCHLEVEL__)" 4991 . 5012)))
          ("ARCHITECTURE_ID" . ((string "\"\"" 10795 . 10797)))
          )
))
  :file "!home!ultimanium!coding!TraderGame!build!CMakeFiles!3.0.1!CompilerIdC!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
